package com.cars24.slack_hrbp.entitiy;

import com.cars24.slack_hrbp.data.entity.ProfileEntity;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class ProfileEntityTest {

    private ProfileEntity profileEntity;

    @BeforeEach
    void setUp() {
        profileEntity = new ProfileEntity();
    }

    @Test
    void testSetAndGetSlackId() {
        String testSlackId = "U12345ABC";
        profileEntity.setSlackid(testSlackId);
        assertEquals(testSlackId, profileEntity.getSlackid());
    }

    @Test
    void testSetAndGetName() {
        String testName = "John Doe";
        profileEntity.setName(testName);
        assertEquals(testName, profileEntity.getName());
    }

    @Test
    void testSetAndGetEmail() {
        String testEmail = "john.doe@example.com";
        profileEntity.setEmail(testEmail);
        assertEquals(testEmail, profileEntity.getEmail());
    }

    @Test
    void testSetAndGetPhone() {
        String testPhone = "+1234567890";
        profileEntity.setPhone(testPhone);
        assertEquals(testPhone, profileEntity.getPhone());
    }

    @Test
    void testFullConstructorAndGetters() {
        // Create a fully populated ProfileEntity
        ProfileEntity fullEntity = new ProfileEntity();
        fullEntity.setSlackid("U12345ABC");
        fullEntity.setName("John Doe");
        fullEntity.setEmail("john.doe@example.com");
        fullEntity.setPhone("+1234567890");

        // Verify all getters
        assertEquals("U12345ABC", fullEntity.getSlackid());
        assertEquals("John Doe", fullEntity.getName());
        assertEquals("john.doe@example.com", fullEntity.getEmail());
        assertEquals("+1234567890", fullEntity.getPhone());
    }

    @Test
    void testToString() {
        // Verify that toString() is generated by Lombok
        ProfileEntity fullEntity = new ProfileEntity();
        fullEntity.setSlackid("U12345ABC");
        fullEntity.setName("John Doe");
        fullEntity.setEmail("john.doe@example.com");
        fullEntity.setPhone("+1234567890");

        String toStringResult = fullEntity.toString();
        assertNotNull(toStringResult);
        assertTrue(toStringResult.contains("slackid=U12345ABC"));
        assertTrue(toStringResult.contains("name=John Doe"));
        assertTrue(toStringResult.contains("email=john.doe@example.com"));
        assertTrue(toStringResult.contains("phone=+1234567890"));
    }

    @Test
    void testEqualsAndHashCode() {
        ProfileEntity entity1 = new ProfileEntity();
        entity1.setSlackid("U12345ABC");
        entity1.setEmail("john.doe@example.com");

        ProfileEntity entity2 = new ProfileEntity();
        entity2.setSlackid("U12345ABC");
        entity2.setEmail("john.doe@example.com");

        ProfileEntity entity3 = new ProfileEntity();
        entity3.setSlackid("different");

        // Test equals
        assertEquals(entity1, entity2);
        assertNotEquals(entity1, entity3);

        // Test hashCode
        assertEquals(entity1.hashCode(), entity2.hashCode());
        assertNotEquals(entity1.hashCode(), entity3.hashCode());
    }

}